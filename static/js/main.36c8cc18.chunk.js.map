{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["storedJsonStr","store","get","json","JSON","parse","initialValue","Value","fromJSON","document","nodes","object","type","text","CmdKeyMark","options","key","onKeyDown","e","editor","next","metaKey","preventDefault","toggleMark","RenderMark","renderMark","props","mark","component","CmdMarkPlugin","CmdKeyPlugins","attribute","children","style","background","CtrlKeyBlock","ctrlKey","isType","value","blocks","some","block","setBlocks","RenderBlock","renderBlock","node","ctrlKeyPlugin","CtrlKeyPlugins","HighlightFocusedBlockPlugin","isFocused","backgroundColor","useStyles","makeStyles","container","display","justifyContent","Toolbar","classes","Box","className","p","Button","onMouseDown","color","isBoldActive","isItalicActive","isStrikethroughActive","isParagraphBlock","isQuotationBlock","isCodeBlock","plugins","renderEditor","Divider","queries","activeMarks","MyEditor","React","useState","setValue","onChange","change","jsonStr","stringify","toJSON","set","autoFocus","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36c8cc18.chunk.js","sourcesContent":["import React from 'react'\nimport { Editor } from 'slate-react'\nimport { Value } from 'slate'\nimport { Divider, Box, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport store from 'store-js'\n\nconst storedJsonStr = store.get('slateJs-demo')\nconst json = JSON.parse(storedJsonStr)\nconst initialValue = Value.fromJSON(json || {\n  document: {\n    nodes: [\n      {\n        object: 'block',\n        type: 'paragraph',\n        nodes: [\n          {\n            object: 'text',\n            text: 'A line of text in a paragraph.'\n          }\n        ]\n      }\n    ]\n  }\n})\n\nconst CmdKeyMark = options => {\n  const { type, key } = options\n  return {\n    onKeyDown: (e, editor, next) => {\n      if (!e.metaKey || !(e.key === key)) {\n        return next()\n      }\n      e.preventDefault()\n      editor.toggleMark(type)\n    }\n  }\n}\nconst RenderMark = options => {\n  return {\n    renderMark: (props, editor, next) => {\n      if (props.mark.type === options.type) {\n        return options.component(props)\n      } else {\n        return next()\n      }\n    }\n  }\n}\nconst CmdMarkPlugin = options => [\n  CmdKeyMark(options),\n  RenderMark(options)\n]\n\nconst CmdKeyPlugins = [\n  ...CmdMarkPlugin({\n    type: 'bold',\n    key: 'b',\n    component: props => (\n      <strong {...props.attribute}>{props.children}</strong>\n    )\n  }),\n  ...CmdMarkPlugin({\n    type: 'strikethrough',\n    key: 's',\n    component: props => (\n      <s {...props.attribute}>{props.children}</s>\n    )\n  }),\n  ...CmdMarkPlugin({\n    type: 'underline',\n    key: 'u',\n    component: props => (\n      <u {...props.attribute}>{props.children}</u>\n    )\n  }),\n  ...CmdMarkPlugin({\n    type: 'italic',\n    key: 'i',\n    component: props => (\n      <i {...props.attribute}>{props.children}</i>\n    )\n  }),\n  ...CmdMarkPlugin({\n    type: 'highlight',\n    key: 'h',\n    component: props => (\n      <span {...props.attribute} style={{ background: 'gold' }}>{props.children}</span>\n    )\n  })\n]\n\nconst CtrlKeyBlock = options => {\n  const { type, key } = options\n  return {\n    onKeyDown: (e, editor, next) => {\n      if (!e.ctrlKey || !(e.key === key)) {\n        return next()\n      }\n      e.preventDefault()\n      const isType = editor.value.blocks.some(block => block.type === type)\n      editor.setBlocks({ type: isType ? 'paragraph' : type })\n    }\n  }\n}\n\nconst RenderBlock = options => {\n  const { type, component } = options\n  return {\n    renderBlock: (props, editor, next) => {\n      if (props.node.type === type) {\n        return component({ ...props })\n      } else {\n        return next()\n      }\n    }\n  }\n}\nconst ctrlKeyPlugin = ({ type, key, component }) => {\n  return [\n    CtrlKeyBlock({ type, key }),\n    RenderBlock({ type, component })\n  ]\n}\n\nconst CtrlKeyPlugins = [\n  ...ctrlKeyPlugin({\n    type: 'code',\n    key: 'c',\n    component: props => (\n      <pre {...props.attribute}>\n        <code>{props.children}</code>\n      </pre>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'header1',\n    key: '1',\n    component: props => (\n      <h1 {...props.attribute}>\n        {props.children}\n      </h1>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'header2',\n    key: '2',\n    component: props => (\n      <h2 {...props.attribute}>\n        {props.children}\n      </h2>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'header3',\n    key: '3',\n    component: props => (\n      <h3 {...props.attribute}>\n        {props.children}\n      </h3>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'header4',\n    key: '4',\n    component: props => (\n      <h4 {...props.attribute}>\n        {props.children}\n      </h4>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'header5',\n    key: '5',\n    component: props => (\n      <h5 {...props.attribute}>\n        {props.children}\n      </h5>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'header6',\n    key: '6',\n    component: props => (\n      <h6 {...props.attribute}>\n        {props.children}\n      </h6>\n    )\n  }),\n  ...ctrlKeyPlugin({\n    type: 'quotation',\n    key: 'q',\n    component: props => (\n      <blockquote {...props.attribute}>\n        {props.children}\n      </blockquote>\n    )\n  })\n]\n\nconst HighlightFocusedBlockPlugin = {\n  renderBlock: (props, editor, next) => {\n    return props.isFocused ? (\n      <div style={{ backgroundColor: 'rgba(0,0,0,.05)' }}>\n        {next()}\n      </div>) : next()\n  }\n}\n\nconst queryPlugins = [\n  {\n    queries: {\n      isBoldActive: editor => editor.value.activeMarks.some(mark => mark.type === 'bold'),\n      isItalicActive: editor => editor.value.activeMarks.some(mark => mark.type === 'italic'),\n      isStrikethroughActive: editor => editor.value.activeMarks.some(mark => mark.type === 'strikethrough'),\n      isCodeBlock: editor => editor.value.blocks.some(block => block.type === 'code'),\n      isParagraphBlock: editor => editor.value.blocks.some(block => block.type === 'paragraph'),\n      isQuotationBlock: editor => editor.value.blocks.some(block => block.type === 'quotation')\n    }\n  }\n]\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n})\nconst Toolbar = ({ editor }) => {\n  const classes = useStyles()\n  const toggleBold = e => {\n    e.preventDefault()\n    editor.toggleMark({ type: 'bold' })\n  }\n  const toggleItalic = e => {\n    e.preventDefault()\n    editor.toggleMark({ type: 'italic' })\n  }\n  const toggleStrikethrough = e => {\n    e.preventDefault()\n    editor.toggleMark({ type: 'strikethrough' })\n  }\n  const setCodeBlock = e => {\n    e.preventDefault()\n    editor.isCodeBlock() ? editor.setBlocks({ type: 'paragraph' }) : editor.setBlocks({ type: 'code' })\n  }\n  const setQuotationBlock = e => {\n    e.preventDefault()\n    editor.isQuotationBlock() ? editor.setBlocks({ type: 'paragraph' }) : editor.setBlocks({ type: 'quotation' })\n  }\n  const setParagraphBlock = e => {\n    e.preventDefault()\n    editor.setBlocks({ type: 'paragraph' })\n  }\n  return (\n    <Box className={classes.container} p={2}>\n      <div>\n        <Button\n          onMouseDown={toggleBold}\n          color={editor.isBoldActive() ? 'secondary' : 'default'}\n        >\n          {'bold'}\n        </Button>\n        <Button\n          onMouseDown={toggleItalic}\n          color={editor.isItalicActive() ? 'secondary' : 'default'}\n        >\n          {'italic'}\n        </Button>\n        <Button\n          onMouseDown={toggleStrikethrough}\n          color={editor.isStrikethroughActive() ? 'secondary' : 'default'}\n        >\n          {'strike'}\n        </Button>\n      </div>\n      <div>\n        <Button\n          onMouseDown={setParagraphBlock}\n          color={editor.isParagraphBlock() ? 'secondary' : 'default'}\n        >\n          {'paragraph'}\n        </Button>\n        <Button\n          onMouseDown={setQuotationBlock}\n          color={editor.isQuotationBlock() ? 'secondary' : 'default'}\n        >\n          {'quote'}\n        </Button>\n        <Button\n          onMouseDown={setCodeBlock}\n          color={editor.isCodeBlock() ? 'secondary' : 'default'}\n        >\n          {'code'}\n        </Button>\n      </div>\n    </Box>\n  )\n}\nconst editorPlugin = {\n  renderEditor: (props, editor, next) => {\n    return (\n      <div>\n        <Toolbar editor={editor} />\n        <Divider />\n        <Box p={2}>\n          {next()}\n        </Box>\n        <Divider />\n      </div>\n    )\n  }\n}\n\nconst plugins = [\n  editorPlugin,\n  ...queryPlugins,\n  HighlightFocusedBlockPlugin,\n  ...CmdKeyPlugins,\n  ...CtrlKeyPlugins\n]\n\nconst MyEditor = props => {\n  const [value, setValue] = React.useState(initialValue)\n  const onChange = (change) => {\n    const jsonStr = JSON.stringify(change.value.toJSON())\n    store.set('slateJs-demo', jsonStr)\n    setValue(change.value)\n  }\n  return (\n    <Editor\n      onChange={onChange}\n      value={value}\n      plugins={plugins}\n      autoFocus\n      placeholder='Type something here...'\n    />\n  )\n}\n\nfunction App () {\n  return (\n    <MyEditor />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}